{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_index/index.component.html","webpack:///./src/app/_index/index.component.ts","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/article/article.component.html","webpack:///./src/app/article/article.component.ts","webpack:///./src/app/articles-resolver.service.ts","webpack:///./src/app/articles/articles.component.html","webpack:///./src/app/articles/articles.component.ts","webpack:///./src/app/auth-resolve.service.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/const.ts","webpack:///./src/app/contacts/contacts.component.html","webpack:///./src/app/contacts/contacts.component.ts","webpack:///./src/app/diploma/diploma.component.html","webpack:///./src/app/diploma/diploma.component.ts","webpack:///./src/app/diplomas-resolver.service.ts","webpack:///./src/app/diplomas/diplomas.component.html","webpack:///./src/app/diplomas/diplomas.component.ts","webpack:///./src/app/image-upload/image-upload.component.html","webpack:///./src/app/image-upload/image-upload.component.ts","webpack:///./src/app/image-upload/image-upload.service.ts","webpack:///./src/app/index-editor/index-editor.component.html","webpack:///./src/app/index-editor/index-editor.component.ts","webpack:///./src/app/interceptor.service.ts","webpack:///./src/app/language-selector/language-selector.component.html","webpack:///./src/app/language-selector/language-selector.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/page-data-resolver.service.ts","webpack:///./src/app/page-editor/page-editor.component.html","webpack:///./src/app/page-editor/page-editor.component.ts","webpack:///./src/app/resolve-user.service.ts","webpack:///./src/app/review/review.component.html","webpack:///./src/app/review/review.component.ts","webpack:///./src/app/reviews-resolver.service.ts","webpack:///./src/app/reviews/reviews.component.html","webpack:///./src/app/reviews/reviews.component.ts","webpack:///./src/app/service/service.component.html","webpack:///./src/app/service/service.component.ts","webpack:///./src/app/services/services.component.ts","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.9892b51c76b177c1b4d8.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<div class=\"container-fluid\">\r\n  <app-language-selector (change)=\"lang = $event\"></app-language-selector>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-10\">\r\n      <label>Header</label>\r\n      <h1>Index Data</h1>\r\n    </div>\r\n  </div>\r\n  <hr>\r\n\r\n  <form (ngSubmit)=\"submit(form)\" #form=\"ngForm\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-2 offset-md-10\">\r\n        <button type=\"submit\" class=\"btn btn-primary btn-block\">Submit</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mt-3 mb-3\">\r\n      <div class=\"col-3\">\r\n        <label for=\"email\">Notification email</label>\r\n      </div>\r\n      <div class=\"col-9\">\r\n        <input type=\"text\" name=\"email\" id=\"email\" class=\"form-control\" placeholder=\"Email\"\r\n               [(ngModel)]=\"notificationEmail\">\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 page-form\" [class.visible]=\"lang === 'en'\">\r\n        <app-index-editor lang=\"en\" [model]=\"model['en']\"></app-index-editor>\r\n      </div>\r\n      <div class=\"col-md-12 page-form\" [class.visible]=\"lang === 'ru'\">\r\n        <app-index-editor lang=\"ru\" [model]=\"model['ru']\"></app-index-editor>\r\n      </div>\r\n      <div class=\"col-md-12 page-form\" [class.visible]=\"lang === 'uk'\">\r\n        <app-index-editor lang=\"uk\" [model]=\"model['uk']\"></app-index-editor>\r\n      </div>\r\n      <div class=\"col-md-12 page-form\" [class.visible]=\"lang === 'fr'\">\r\n        <app-index-editor lang=\"fr\" [model]=\"model['fr']\"></app-index-editor>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-2 offset-md-10\">\r\n        <button type=\"submit\" class=\"btn btn-primary btn-block\">Submit</button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '../../environments/environment';\r\nimport {IPageSubmit} from '../ipage-submit';\r\nimport {NgForm} from '@angular/forms';\r\nimport {languages} from '../const';\r\nimport {IPage} from '../ipage';\r\n\r\nexport interface INavigationLink {\r\n  name: string;\r\n  href: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.scss']\r\n})\r\nexport class IndexComponent implements OnInit {\r\n  public lang = 'en';\r\n  public model: any;\r\n  private requestObj: IPageSubmit = {\r\n    id: 'main',\r\n    page: {},\r\n    media: []\r\n  };\r\n  public notificationEmail: string;\r\n\r\n  constructor(private route: ActivatedRoute, private httpClient: HttpClient) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.model = this.route.snapshot.data.pageData;\r\n    this.notificationEmail = this.model.en.pageData.notificationEmail;\r\n  }\r\n\r\n  submit(e: NgForm) {\r\n    for (const index in languages) {\r\n      if (languages.hasOwnProperty(index)) {\r\n        const language = languages[index];\r\n        this.requestObj.page[language] = {pageData: e.value[language]} as IPage;\r\n        this.requestObj.page[language].pageData.email = this.notificationEmail;\r\n      }\r\n    }\r\n\r\n    this.httpClient.put('interface', {\r\n      ...this.requestObj,\r\n      token: localStorage.getItem('AuthToken')\r\n    })\r\n      .subscribe((response: any): void => {\r\n        window.location.reload();\r\n      });\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <app-language-selector (change)=\"lang = $event\"></app-language-selector>\r\n\r\n  <form (ngSubmit)=\"submit(form)\" #form=\"ngForm\" encType=\"multipart/form-data\">\r\n    <app-image-upload [init]=\"pageMedia\" (changeMedia)=\"setPageMedia($event)\"></app-image-upload>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-2 offset-md-10\">\r\n        <button type=\"submit\" class=\"btn btn-primary btn-block\">Submit</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 page-form\" [class.visible]=\"lang === 'en'\">\r\n        <app-page-editor [model]=\"langObject['en']\" lang=\"en\"></app-page-editor>\r\n      </div>\r\n      <div class=\"col-md-12 page-form\" [class.visible]=\"lang === 'ru'\">\r\n        <app-page-editor [model]=\"langObject['ru']\" lang=\"ru\"></app-page-editor>\r\n      </div>\r\n      <div class=\"col-md-12 page-form\" [class.visible]=\"lang === 'uk'\">\r\n        <app-page-editor [model]=\"langObject['uk']\" lang=\"uk\"></app-page-editor>\r\n      </div>\r\n      <div class=\"col-md-12 page-form\" [class.visible]=\"lang === 'fr'\">\r\n        <app-page-editor [model]=\"langObject['fr']\" lang=\"fr\"></app-page-editor>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-2 offset-md-10\">\r\n        <button type=\"submit\" class=\"btn btn-primary btn-block\">Submit</button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {IPageLanguageContainer} from '../ipage-language-container';\r\nimport {IPageImage, IPageSubmit} from '../ipage-submit';\r\nimport {NgForm} from '@angular/forms';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '../../environments/environment';\r\nimport {switchMap} from 'rxjs/internal/operators';\r\nimport {IFileUploadResponse} from '../i-file-upload-response';\r\nimport {Observable} from 'rxjs';\r\nimport {ImageUploadService} from '../image-upload/image-upload.service';\r\nimport {TImageStatus} from '../types';\r\n\r\n\r\nexport interface IImage {\r\n  src: string;\r\n  alt: string;\r\n  status: TImageStatus;\r\n  oldStatus?: TImageStatus;\r\n  file?: File;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.scss']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n  public langObject: IPageLanguageContainer;\r\n  public lang = 'en';\r\n  private requestObj: IPageSubmit = {\r\n    id: 'about',\r\n    page: {},\r\n    media: []\r\n  };\r\n  public pageMedia: Array<IImage> = [];\r\n  private mediaObjects: Array<IImage> = [];\r\n\r\n  constructor(private route: ActivatedRoute, private httpClient: HttpClient, private imageUpload: ImageUploadService) {\r\n  }\r\n\r\n  public submit(e: NgForm) {\r\n    const filedToUpload: Array<IImage> = this.mediaObjects\r\n      .filter((media: IImage): boolean => media.status === 'to upload');\r\n\r\n    const filesToRemove: Array<IImage> = this.mediaObjects\r\n      .filter((media: IImage): boolean => (media.status === 'removed' && media.oldStatus !== 'to upload'));\r\n\r\n    this.imageUpload.uploadMedia(filedToUpload.map((media: IImage): File => media.file))\r\n      .pipe(\r\n        switchMap((files: Array<IFileUploadResponse>): Observable<any> => {\r\n          this.requestObj.media = files.map((file: IFileUploadResponse): IPageImage => ({\r\n            src: file.url,\r\n            status: 'add'\r\n          }));\r\n\r\n          this.requestObj.media.push(...filesToRemove.map((file: IImage): IPageImage => ({\r\n              src: file.src,\r\n              status: 'remove'\r\n          })));\r\n\r\n          for (const i in e.controls) {\r\n            if (!e.controls.hasOwnProperty(i)) {\r\n              continue;\r\n            }\r\n\r\n            if (e.controls[i].dirty) {\r\n              this.requestObj.page[i] = e.controls[i].value;\r\n            }\r\n          }\r\n\r\n          return this.httpClient.put('interface', {\r\n            ...this.requestObj,\r\n            token: localStorage.getItem('AuthToken')\r\n          });\r\n        })\r\n      )\r\n      .subscribe((files: any): void => {\r\n        window.location.reload();\r\n      });\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.langObject = this.route.snapshot.data.pageData;\r\n    this.pageMedia = this.route.snapshot.data.pageData.en.images.map((img: string): IImage => ({\r\n      src: img,\r\n      alt: '',\r\n      status: 'in database'\r\n    }));\r\n  }\r\n\r\n  public setPageMedia($event: Array<IImage>) {\r\n    this.mediaObjects = $event;\r\n\r\n    const inDatabase: Array<IImage> = this.mediaObjects.filter((media: IImage): boolean => media.status === 'in database');\r\n    const toUpload: Array<IImage> = this.mediaObjects.filter((media: IImage): boolean => media.status === 'to upload');\r\n    const removed: Array<IImage> = this.mediaObjects.filter((media: IImage): boolean => media.status === 'removed');\r\n\r\n    console.log('----------------------------');\r\n    console.log('in database', inDatabase);\r\n    console.log('to upload', toUpload);\r\n    console.log('removed', removed);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {AboutComponent} from './about/about.component';\r\nimport {IndexComponent} from './_index/index.component';\r\nimport {ArticleComponent} from './article/article.component';\r\nimport {ArticlesComponent} from './articles/articles.component';\r\nimport {DiplomaComponent} from './diploma/diploma.component';\r\nimport {DiplomasComponent} from './diplomas/diplomas.component';\r\nimport {ServiceComponent} from './service/service.component';\r\nimport {ServicesComponent} from './services/services.component';\r\nimport {ReviewComponent} from './review/review.component';\r\nimport {ReviewsComponent} from './reviews/reviews.component';\r\nimport {AuthService} from './auth.service';\r\nimport {AuthResolveService} from './auth-resolve.service';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {ContactsComponent} from './contacts/contacts.component';\r\nimport {PageDataResolverService} from './page-data-resolver.service';\r\nimport {IPage} from './ipage';\r\nimport {ArticlesResolverService} from './articles-resolver.service';\r\nimport {UserComponent} from './user/user.component';\r\nimport {ResolveUserService} from './resolve-user.service';\r\nimport {ReviewsResolverService} from \"./reviews-resolver.service\";\r\nimport {DiplomasResolverService} from \"./diplomas-resolver.service\";\r\n\r\nexport function sortByLanguage(array: Array<IPage>) {\r\n  const result = {};\r\n\r\n  array.forEach((item: IPage) => {\r\n    result[item.language] = item;\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: IndexComponent,\r\n    canActivate: [AuthService],\r\n    canLoad: [AuthService],\r\n    resolve: {pageData: PageDataResolverService},\r\n    data: {resolverData: 'main', resolverFn: sortByLanguage}\r\n  }, {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n    resolve: {loginSuccess: AuthResolveService}\r\n  }, {\r\n    path: 'about',\r\n    component: AboutComponent,\r\n    canActivate: [AuthService],\r\n    canLoad: [AuthService],\r\n    data: {resolverData: 'about', resolverFn: sortByLanguage},\r\n    resolve: {pageData: PageDataResolverService}\r\n  }, {\r\n    path: 'article/:id',\r\n    component: ArticleComponent,\r\n    canActivate: [AuthService],\r\n    canLoad: [AuthService]\r\n  }, {\r\n    path: 'articles',\r\n    component: ArticlesComponent,\r\n    canActivate: [AuthService],\r\n    canLoad: [AuthService],\r\n    data: {resolverData: 'article', resolverFn: sortByLanguage},\r\n    resolve: {pageData: PageDataResolverService, articlesData: ArticlesResolverService}\r\n  }, {\r\n    path: 'diploma/:id',\r\n    component: DiplomaComponent,\r\n    canActivate: [AuthService],\r\n    canLoad: [AuthService]\r\n  }, {\r\n    path: 'diplomas',\r\n    component: DiplomasComponent,\r\n    canActivate: [AuthService],\r\n    canLoad: [AuthService],\r\n    data: {resolverData: 'diploma', resolverFn: sortByLanguage},\r\n    resolve: {diplomasData: DiplomasResolverService}\r\n  }, {\r\n    path: 'service/:id',\r\n    component: ServiceComponent,\r\n    canActivate: [AuthService],\r\n    canLoad: [AuthService]\r\n  }, {\r\n    path: 'services',\r\n    component: ServicesComponent,\r\n    canActivate: [AuthService],\r\n    canLoad: [AuthService],\r\n    data: {resolverData: 'service', resolverFn: sortByLanguage},\r\n    resolve: {pageData: PageDataResolverService}\r\n  }, {\r\n    path: 'review/:id',\r\n    component: ReviewComponent,\r\n    canActivate: [AuthService],\r\n    canLoad: [AuthService]\r\n  }, {\r\n    path: 'reviews',\r\n    component: ReviewsComponent,\r\n    canActivate: [AuthService],\r\n    canLoad: [AuthService],\r\n    data: {resolverData: 'review', resolverFn: sortByLanguage},\r\n    resolve: {pageData: ReviewsResolverService}\r\n  }, {\r\n    path: 'contacts',\r\n    component: ContactsComponent,\r\n    canActivate: [AuthService],\r\n    canLoad: [AuthService],\r\n    data: {resolverData: 'contacts', resolverFn: sortByLanguage},\r\n    resolve: {pageData: PageDataResolverService}\r\n  }, {\r\n    path: 'user/:nickname',\r\n    component: UserComponent,\r\n    canActivate: [AuthService],\r\n    canLoad: [AuthService],\r\n    resolve: {userRequested: ResolveUserService}\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: []\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" *ngIf=\"userName\">\r\n  <a class=\"navbar-brand\" routerLink=\"/\" [class.disabled]=\"isFirstLogin\">Irina Romanenkova</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item\" routerLinkActive=\"active\" *ngFor=\"let link of nav\">\r\n        <a class=\"nav-link\" [routerLink]=\"link.href\" [class.disabled]=\"isFirstLogin\">{{link.name}}</a>\r\n      </li>\r\n    </ul>\r\n    <div class=\"my-2 my-lg-0\">\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item dropdown\">\r\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\"\r\n             aria-haspopup=\"true\" aria-expanded=\"false\" [class.disabled]=\"isFirstLogin\">\r\n            Admin\r\n          </a>\r\n          <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <a class=\"dropdown-item\" [routerLink]=\"['user', userName]\">Personal Account</a>\r\n            <a class=\"dropdown-item\" href=\"#\">Accounts Management</a>\r\n            <div class=\"dropdown-divider\"></div>\r\n            <a class=\"dropdown-item\" href=\"#\" (click)=\"logout()\">Logout</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"nav-item go-to-site-wrapper\">\r\n          <a class=\"nav-link btn btn-primary go-to-site\" href=\"https://romanenkova.herokuapp.com\" [class.disabled]=\"isFirstLogin\">\r\n            Go to site\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <!--<input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">-->\r\n      <!--<button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>-->\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n<!--<div class=\"container-fluid\">-->\r\n  <router-outlet></router-outlet>\r\n<!--</div>-->\r\n\r\n","import {Component, DoCheck, OnChanges, OnInit} from '@angular/core';\r\nimport {INavigationLink} from './_index/index.component';\r\nimport {NavigationEnd, Router, RouterEvent} from '@angular/router';\r\nimport {filter, map, tap} from 'rxjs/internal/operators';\r\nimport {Observable} from 'rxjs';\r\nimport {IUser} from './iuser';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  public nav: Array<INavigationLink> = [\r\n    {name: 'About', href: 'about'},\r\n    {name: 'Articles', href: 'articles'},\r\n    {name: 'Diplomas', href: 'diplomas'},\r\n    {name: 'Services', href: 'services'},\r\n    {name: 'Reviews', href: 'reviews'},\r\n    {name: 'Contacts', href: 'contacts'},\r\n  ];\r\n  public userName: string;\r\n  public isFirstLogin: boolean;\r\n\r\n  constructor(private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setFirstLogin();\r\n    this.router.events.pipe(\r\n      filter(() => JSON.parse(localStorage.getItem('user'))),\r\n      tap(() => {\r\n        this.userName = (JSON.parse(localStorage.getItem('user')) as IUser).nickName;\r\n      }),\r\n      filter<RouterEvent>((e: RouterEvent) => e instanceof NavigationEnd),\r\n      map((e: NavigationEnd) => e)\r\n    ).subscribe(this.setFirstLogin.bind(this));\r\n  }\r\n\r\n  private setFirstLogin() {\r\n    if (JSON.parse(localStorage.getItem('user'))) {\r\n      this.userName = (JSON.parse(localStorage.getItem('user')) as IUser).nickName;\r\n      this.isFirstLogin = (JSON.parse(localStorage.getItem('user')) as IUser).isFirstLogin;\r\n    }\r\n\r\n    if (this.isFirstLogin) {\r\n      this.router.navigate([`/user/${this.userName}`]);\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    localStorage.clear();\r\n    window.location.reload();\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { IndexComponent } from './_index/index.component';\r\nimport { ArticleComponent } from './article/article.component';\r\nimport { ArticlesComponent } from './articles/articles.component';\r\nimport { DiplomaComponent } from './diploma/diploma.component';\r\nimport { DiplomasComponent } from './diplomas/diplomas.component';\r\nimport { ServiceComponent } from './service/service.component';\r\nimport { ServicesComponent } from './services/services.component';\r\nimport { ReviewsComponent } from './reviews/reviews.component';\r\nimport { ReviewComponent } from './review/review.component';\r\nimport { ContactsComponent } from './contacts/contacts.component';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { LanguageSelectorComponent } from './language-selector/language-selector.component';\r\nimport { PageEditorComponent } from './page-editor/page-editor.component';\r\nimport { ImageUploadComponent } from './image-upload/image-upload.component';\r\nimport { IndexEditorComponent } from './index-editor/index-editor.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport {InterceptorService} from \"./interceptor.service\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    AboutComponent,\r\n    IndexComponent,\r\n    ArticleComponent,\r\n    ArticlesComponent,\r\n    DiplomaComponent,\r\n    DiplomasComponent,\r\n    ServiceComponent,\r\n    ServicesComponent,\r\n    ReviewsComponent,\r\n    ReviewComponent,\r\n    ContactsComponent,\r\n    LanguageSelectorComponent,\r\n    PageEditorComponent,\r\n    ImageUploadComponent,\r\n    IndexEditorComponent,\r\n    UserComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [\r\n    {provide: HTTP_INTERCEPTORS, useClass: InterceptorService, multi: true}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<p>\n  article works!\n</p>\n","import { Component, OnInit } from '@angular/core';\r\nimport {IPageLanguageContainer} from '../ipage-language-container';\r\nimport {ActivatedRoute} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-article',\r\n  templateUrl: './article.component.html',\r\n  styleUrls: ['./article.component.scss']\r\n})\r\nexport class ArticleComponent implements OnInit {\r\n  public langObject: IPageLanguageContainer;\r\n\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.langObject = this.route.snapshot.data.pageData;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\r\nimport {IArticle} from './iarticle';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '../environments/environment';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ArticlesResolverService implements Resolve<Array<IArticle>> {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Array<IArticle>> {\r\n    return this.httpClient.get('article', {params: {token: localStorage.getItem('AuthToken')}})\r\n      .pipe(\r\n        map((data: any): Array<IArticle> => {\r\n          return data.map((article: any): IArticle => ({\r\n            url: article.url,\r\n            updatedAt: article.updatedAt,\r\n            logo: article.logo,\r\n            isPublished: article.isPublished,\r\n            isDeleted: article.isDeleted,\r\n            header: article.header,\r\n            entityId: article.entityId,\r\n            deletedAt: article.isDeleted,\r\n            createdAt: article.createdAt\r\n          }));\r\n        })\r\n      );\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-10\">\r\n      <label>Header</label>\r\n      <h1>Articles</h1>\r\n    </div>\r\n  </div>\r\n  <hr>\r\n\r\n  <button type=\"button\" class=\"btn btn-link\"><i class=\"fas fa-plus-circle\"></i> Add New Article</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {IPageLanguageContainer} from '../ipage-language-container';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {NgForm} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-articles',\r\n  templateUrl: './articles.component.html',\r\n  styleUrls: ['./articles.component.scss']\r\n})\r\nexport class ArticlesComponent implements OnInit {\r\n  public langObject: IPageLanguageContainer;\r\n\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.langObject = this.route.snapshot.data.pageData;\r\n    console.log(this.route.snapshot.data.pageData);\r\n  }\r\n\r\n  submit(e: NgForm) {\r\n\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Resolve, Router} from '@angular/router';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {ISimpleResponse} from './i-simple-response';\r\nimport {catchError, filter, pluck, tap} from 'rxjs/internal/operators';\r\nimport {Observable, ObservableInput, of} from 'rxjs';\r\nimport {environment} from '../environments/environment';\r\nimport {debug} from 'util';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthResolveService implements Resolve<boolean> {\r\n  resolve(): Observable<boolean> {\r\n    const token = localStorage.getItem('AuthToken');\r\n\r\n    if (token) {\r\n      return this.httpClient.post<ISimpleResponse>('uservalid', {token})\r\n        .pipe(\r\n          catchError((): ObservableInput<ISimpleResponse> => {\r\n            localStorage.clear();\r\n            return of({success: false});\r\n          }),\r\n          tap((data: ISimpleResponse) => {\r\n            if (data.success) {\r\n              localStorage.setItem('user', JSON.stringify(data.user));\r\n            }\r\n          }),\r\n          pluck<ISimpleResponse, boolean>('success'),\r\n        );\r\n    }\r\n\r\n    return of(false);\r\n  }\r\n\r\n  constructor(private httpClient: HttpClient, private router: Router) {\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  CanLoad,\r\n  Route,\r\n  Router,\r\n  RouterStateSnapshot\r\n} from '@angular/router';\r\nimport {Observable, ObservableInput, of} from 'rxjs';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {ISimpleResponse} from './i-simple-response';\r\nimport {catchError, pluck, tap} from 'rxjs/internal/operators';\r\nimport {environment} from '../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService implements CanActivate, CanLoad {\r\n  canLoad(route: Route): Observable<boolean> {\r\n    return this.resolver(route);\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    return this.resolver(route, state);\r\n  }\r\n\r\n  private resolver(route: ActivatedRouteSnapshot | Route, state?: RouterStateSnapshot) {\r\n    const token = localStorage.getItem('AuthToken');\r\n\r\n    if (token) {\r\n      return this.httpClient.post<ISimpleResponse>('uservalid', {token})\r\n        .pipe(\r\n          catchError((): ObservableInput<ISimpleResponse> => {\r\n            localStorage.clear();\r\n            return of({success: false});\r\n          }),\r\n          tap((data: ISimpleResponse) => {\r\n            localStorage.setItem('user', JSON.stringify(data.user));\r\n          }),\r\n          pluck<ISimpleResponse, boolean>('success')\r\n        );\r\n    }\r\n\r\n    this.route.navigate(['/login']);\r\n    return of(false);\r\n  }\r\n\r\n  constructor(private httpClient: HttpClient, private route: Router, private router: Router) {\r\n  }\r\n}\r\n","import {TLanguage} from './types';\r\n\r\nexport const languages: Array<TLanguage> = ['en', 'ru', 'uk', 'fr'];\r\n","<div class=\"container-fluid\">\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-10\">\r\n      <label>Header</label>\r\n      <h1>Contacts</h1>\r\n    </div>\r\n  </div>\r\n  <hr>\r\n\r\n  <form (ngSubmit)=\"submit(form)\" #form=\"ngForm\" encType=\"multipart/form-data\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-2 offset-md-10\">\r\n        <button type=\"submit\" class=\"btn btn-primary btn-block\">Submit</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mt-3\" *ngFor=\"let contact of model\">\r\n      <div class=\"col-12\">\r\n        <div class=\"input-group\">\r\n          <div class=\"input-group-prepend\">\r\n            <span class=\"input-group-text\">{{contact.name}}</span>\r\n          </div>\r\n          <input type=\"text\" [name]=\"contact.type\" [id]=\"contact.type\" class=\"form-control\" placeholder=\"Skype\"\r\n                 [(ngModel)]=\"contact.account\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mt-3\">\r\n      <div class=\"col-md-2 offset-md-10\">\r\n        <button type=\"submit\" class=\"btn btn-primary btn-block\">Submit</button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {IPageLanguageContainer} from '../ipage-language-container';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {NgForm} from '@angular/forms';\r\nimport {languages} from '../const';\r\nimport {IPage} from '../ipage';\r\nimport {environment} from '../../environments/environment';\r\nimport {IPageSubmit} from '../ipage-submit';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {IContact} from '../icontact';\r\nimport {TLanguage} from '../types';\r\n\r\n@Component({\r\n  selector: 'app-contacts',\r\n  templateUrl: './contacts.component.html',\r\n  styleUrls: ['./contacts.component.scss']\r\n})\r\nexport class ContactsComponent implements OnInit {\r\n  private langObject: IPageLanguageContainer;\r\n  public model: any;\r\n  public lang: string;\r\n  private requestObj: IPageSubmit = {\r\n    id: 'contacts',\r\n    page: {},\r\n    media: []\r\n  };\r\n\r\n  constructor(private route: ActivatedRoute, private httpClient: HttpClient) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.langObject = this.route.snapshot.data.pageData;\r\n    this.model = this.langObject.en.pageData;\r\n  }\r\n\r\n  submit(e: NgForm) {\r\n    const result = {};\r\n    for (const lang in this.langObject) {\r\n      if (this.langObject[lang]) {\r\n        result[lang] = {pageData: this.langObject[lang].pageData.map((oldContact: IContact) => ({\r\n          ...oldContact,\r\n          account: this.model.find((newContact: IContact) => newContact.type === oldContact.type).account\r\n        }))};\r\n      }\r\n    }\r\n\r\n    this.requestObj.page = result;\r\n\r\n    this.httpClient.put('interface', {\r\n      ...this.requestObj,\r\n      token: localStorage.getItem('AuthToken')\r\n    })\r\n      .subscribe((response: any): void => {\r\n        window.location.reload();\r\n      });\r\n  }\r\n}\r\n","<form (ngSubmit)=\"submit(form)\" #form=\"ngForm\">\n  <div>\n    <input type=\"file\" #uploaderEl [(ngModel)]=\"imageUploder\" name=\"image-uploader\">\n    <img style=\"max-width: 200px\" [src]=\"diploma.picture\" alt=\"\">\n  </div>\n  <div>\n    <label class=\"col-form-label\">Institute <input class=\"form-control\" type=\"text\" [(ngModel)]=\"diploma.header\" name=\"header\"></label>\n  </div>\n  <div>\n    <label class=\"col-form-label\">Graduation Year <input class=\"form-control\" type=\"text\" [(ngModel)]=\"diploma.graduateYear\" name=\"graduateYear\"></label>\n  </div>\n  <div>\n    <button type=\"submit\" class=\"btn btn-primary\">Save or update</button>\n    <button type=\"button\" class=\"btn btn-danger\" [disabled]=\"diploma.header !== 'remove'\" (click)=\"remove(diploma._id)\">Remove (type remove in institute)</button>\n  </div>\n</form>\n\n","import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\nimport {IDiploma} from \"../idiploma\";\nimport {ImageUploadService} from \"../image-upload/image-upload.service\";\nimport {switchMap} from \"rxjs/internal/operators\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs/index\";\nimport {environment} from \"../../environments/environment\";\n\n@Component({\n  selector: 'app-diploma',\n  templateUrl: './diploma.component.html',\n  styleUrls: ['./diploma.component.scss']\n})\nexport class DiplomaComponent implements OnInit {\n  @Input() diploma?: IDiploma;\n  @ViewChild('uploaderEl') uploaderEl: ElementRef;\n\n  imageUploder: any;\n\n  constructor(public imageUpload: ImageUploadService, private httpClient: HttpClient) {\n  }\n\n  ngOnInit() {\n  }\n\n  submit(form) {\n    this.imageUpload.uploadMedia(this.uploaderEl.nativeElement.files)\n      .pipe(\n        switchMap((imageArray): Observable<IDiploma> => {\n          const picture = imageArray[0] && imageArray[0].url;\n          if (this.diploma._id) {\n            return this.httpClient.put<IDiploma>('diploma', {...form.value, picture}, {params: {id: this.diploma._id}});\n          }\n\n          return this.httpClient.post<IDiploma>('diploma', {...form.value, picture});\n        })\n      )\n      .subscribe((response) => {\n        console.log(response);\n        window.location.reload();\n      }, (response) => {\n        console.error(response);\n      })\n  }\n\n  remove(id: string) {\n    return this.httpClient.delete(`diploma/${id}`)\n      .subscribe(() => {\n        window.location.reload()\n      })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs/index\";\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {environment} from \"../environments/environment\";\nimport {map} from \"rxjs/operators\";\nimport {IDiploma} from \"./idiploma\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DiplomasResolverService implements Resolve<Array<IDiploma>> {\n\n  constructor(private httpClient: HttpClient) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Array<IDiploma>> {\n    return this.httpClient.get<Array<IDiploma>>('diploma', {params: {token: localStorage.getItem('AuthToken')}});\n  }\n}\n","<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <h3>Diplomas</h3>\r\n    </div>\r\n  </div>\r\n\r\n  <hr>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-4\" *ngFor=\"let diploma of diplomas\">\r\n      <app-diploma [diploma]=\"diploma\"></app-diploma>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\r\nimport {IPageLanguageContainer} from '../ipage-language-container';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {IDiploma} from \"../idiploma\";\r\n\r\n@Component({\r\n  selector: 'app-diplomas',\r\n  templateUrl: './diplomas.component.html',\r\n  styleUrls: ['./diplomas.component.scss']\r\n})\r\nexport class DiplomasComponent implements OnInit {\r\n  public langObject: IPageLanguageContainer;\r\n  public header: string;\r\n  public diplomas: Array<IDiploma>;\r\n\r\n  constructor(private route: ActivatedRoute, public changeDetectionRef: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n    this.diplomas = this.route.snapshot.data.diplomasData;\r\n    this.diplomas.push(<any>{});\r\n    setTimeout(() => {\r\n      this.changeDetectionRef.detectChanges();\r\n    }, 0)\r\n  }\r\n}\r\n","<input class=\"custom-file-input\" type=\"file\" name=\"fileUpload\" (change)=\"handleFileInput($event)\" multiple style=\"opacity: 1; width: 100%; height: 100%\">\n<hr>\n<div class=\"row\">\n  <div class=\"col-md-3 mb-3\" *ngFor=\"let img of mediaObjects\">\n    <div class=\"card\" [class.border-success]=\"img.status === 'to upload'\" [class.border-danger]=\"img.status === 'removed'\">\n      <div class=\"card-img-top\" [style.background-image]=\"'url(' + img.src + ')'\"></div>\n      <div class=\"card-footer\">\n        <h6 [class.text-success]=\"img.status === 'to upload'\" [class.text-danger]=\"img.status === 'removed'\">Status: {{img.status}}</h6>\n        <button type=\"button\" class=\"btn btn-primary\" *ngIf=\"img.status !== 'removed'\" (click)=\"setImageStatus('removed', img)\">Remove</button>\n        <button type=\"button\" class=\"btn btn-primary\" *ngIf=\"img.status === 'removed'\" (click)=\"setImageStatus(img.oldStatus, img)\">Return</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {IImage} from \"../about/about.component\";\nimport {TImageStatus} from \"../types\";\n\n@Component({\n  selector: 'app-image-upload',\n  templateUrl: './image-upload.component.html',\n  styleUrls: ['./image-upload.component.scss']\n})\nexport class ImageUploadComponent implements OnInit {\n  @Output() public changeMedia: EventEmitter<Array<IImage>> = new EventEmitter<Array<IImage>>();\n  @Input() public init: Array<IImage>;\n\n  public mediaObjects: Array<IImage> = [];\n  private filesToUpload: Array<File>;\n\n  handleFileInput(fileInput: any) {\n    this.filesToUpload = <Array<File>>fileInput.target.files;\n    const mediaToPushQ: Array<Promise<IImage>> = Object.values(this.filesToUpload).map((file: File): Promise<IImage> =>\n      new Promise((resolve, reject) => {\n        const reader = new FileReader();\n\n        reader.onload = (e: any) => {\n          resolve({\n            src: e.target.result,\n            alt: 'File to upload',\n            status: 'to upload',\n            file\n          });\n        };\n        reader.onerror = (e: any) => {\n          reject(e);\n        };\n        reader.readAsDataURL(file);\n      })\n    );\n\n    Promise.all(mediaToPushQ)\n      .then((mediaToPush: Array<IImage>) => {\n        this.mediaObjects.push(...mediaToPush);\n        this.changeMedia.emit(this.mediaObjects);\n      });\n  }\n\n  setImageStatus(status: TImageStatus, img: IImage) {\n    img.oldStatus = img.status;\n    img.status = status;\n\n    this.changeMedia.emit(this.mediaObjects);\n  }\n\n  ngOnInit() {\n    this.mediaObjects = [...this.init];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {IFileUploadResponse} from \"../i-file-upload-response\";\nimport {environment} from \"../../environments/environment\";\nimport {Observable, Observer} from \"rxjs/index\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageUploadService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  public uploadMedia(filesToUpload: Array<File>): Observable<Array<IFileUploadResponse>> {\n    if (filesToUpload && filesToUpload.length) {\n      const formData: any = new FormData();\n      const files: Array<File> = filesToUpload;\n\n      for (let i = 0; i < files.length; i++) {\n        formData.append('upload', files[i], files[i].name);\n      }\n\n      return this.httpClient.post<Array<IFileUploadResponse>>('upload', formData);\n    }\n\n    return Observable.create((observer: Observer<Array<null>>): void => {\n      observer.next([]);\n    });\n  }\n}\n","<div class=\"form-group\" [ngModelGroup]=\"lang\">\r\n  <div class=\"row\">\r\n    <div class=\"col-3\">\r\n      <label for=\"position\">Position and Name ({{model.pageData.position}} {{model.pageData.name.join(' ')}})</label>\r\n    </div>\r\n    <div class=\"col-9\">\r\n      <div class=\"flex-wrapper\">\r\n        <input type=\"text\" name=\"position\" id=\"position\" class=\"form-control mr-3\" placeholder=\"Position\"\r\n               [(ngModel)]=\"model.pageData.position\">\r\n        <input type=\"text\" name=\"firstName\" id=\"first-name\" class=\"form-control mr-3\" placeholder=\"First Name\"\r\n               [(ngModel)]=\"model.pageData.name[0]\">\r\n        <input type=\"text\" name=\"lastName\" id=\"last-name\" class=\"form-control\" placeholder=\"Last Name\"\r\n               [(ngModel)]=\"model.pageData.name[1]\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {TLanguage} from '../types';\r\nimport {ControlContainer, NgForm} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-index-editor',\r\n  templateUrl: './index-editor.component.html',\r\n  styleUrls: ['./index-editor.component.scss'],\r\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ]\r\n})\r\nexport class IndexEditorComponent implements OnInit {\r\n  @Input() lang: TLanguage;\r\n  @Input() model: any = {};\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpParams, HttpRequest} from \"@angular/common/http\";\nimport {Observable} from \"rxjs/index\";\nimport {environment} from \"../environments/environment\";\nimport {HttpParamsOptions} from \"@angular/common/http/src/params\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterceptorService implements HttpInterceptor{\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const newParams = {};\n    const isParametrizedReq = req.method === 'GET' || req.method === 'DELETE';\n    const token = localStorage.getItem('AuthToken');\n    req.params.keys().forEach((key: string) => newParams[key] = req.params.getAll(key));\n    const params = isParametrizedReq ? new HttpParams({fromObject: {...newParams, token}}) : undefined;\n    const body = isParametrizedReq || req.url.endsWith('upload') ? undefined : {...req.body, token};\n    const newReq = req.clone({\n      url: environment.api + req.url,\n      body,\n      params\n    });\n    return next.handle(newReq);\n  }\n\n  constructor() { }\n}\n","<ul class=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\r\n  <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\r\n    <span class=\"nav-link\" [class.active]=\"active === tab\" (click)=\"langChanged($event, tab)\">\r\n      {{tab}}\r\n    </span>\r\n  </li>\r\n</ul>\r\n","import {Component, EventEmitter, Input, OnInit, Output, TemplateRef} from '@angular/core';\r\nimport {IPageLanguageContainer} from '../ipage-language-container';\r\nimport {TLanguage} from '../types';\r\n\r\n@Component({\r\n  selector: 'app-language-selector',\r\n  templateUrl: './language-selector.component.html',\r\n  styleUrls: ['./language-selector.component.scss']\r\n})\r\nexport class LanguageSelectorComponent implements OnInit {\r\n  public tabs: Array<TLanguage> = ['en', 'ru', 'uk', 'fr'];\r\n  public active: string = this.tabs[0];\r\n  public langObject: IPageLanguageContainer;\r\n\r\n  @Input() tpl: TemplateRef<{lang: string}>;\r\n  @Output() change: EventEmitter<string> = new EventEmitter<string>();\r\n  @Output() click: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  constructor() { }\r\n\r\n  langChanged($event: MouseEvent, tab: string) {\r\n    if (tab !== this.active) {\r\n      this.change.emit(tab);\r\n    }\r\n\r\n    this.click.emit(tab);\r\n    this.active = tab;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","<div class=\"screen\">\r\n  <div class=\"img-wrapper\">\r\n\r\n  </div>\r\n  <div class=\"form-wrapper\">\r\n    <div class=\"bg\"></div>\r\n    <div class=\"error\" *ngIf=\"errorText\">\r\n      <div class=\"alert alert-danger\" role=\"alert\">\r\n        <p><i class=\"fas fa-times-circle\"></i> {{errorText}}</p>\r\n      </div>\r\n    </div>\r\n    <form class=\"form\" (submit)=\"submit(form)\" #form=\"ngForm\">\r\n      <div class=\"form-group\">\r\n        <label for=\"l\">Nickname</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"l\" placeholder=\"login\" [(ngModel)]=\"login\" name=\"login\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"p\">Password</label>\r\n        <input type=\"password\" class=\"form-control\" id=\"p\" placeholder=\"password\" [(ngModel)]=\"password\" name=\"password\">\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {HttpClient, HttpEvent} from '@angular/common/http';\r\nimport {ISimpleResponse} from '../i-simple-response';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {environment} from '../../environments/environment';\r\nimport {IUser} from '../iuser';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public login: string;\r\n  public password: string;\r\n  public errorText: string;\r\n  private redirectUrl: string = '';\r\n\r\n  constructor(private httpClient: HttpClient, private router: Router, private route: ActivatedRoute) {\r\n  }\r\n\r\n  submit(f) {\r\n    this.httpClient.post<ISimpleResponse>('login', f.value)\r\n      .subscribe((response: ISimpleResponse) => {\r\n        if (response.success) {\r\n          localStorage.setItem('AuthToken', response.message);\r\n          localStorage.setItem('user', JSON.stringify(response.user));\r\n\r\n          const isFirstLogin = (JSON.parse(localStorage.getItem('user')) as IUser).isFirstLogin;\r\n          const nickName = (JSON.parse(localStorage.getItem('user')) as IUser).nickName;\r\n\r\n          if (isFirstLogin) {\r\n            this.redirectUrl = `/user/${nickName}`;\r\n          }\r\n          this.errorText = '';\r\n          this.router.navigate([this.redirectUrl]);\r\n        } else {\r\n          alert(response.message);\r\n          this.errorText = response.message;\r\n        }\r\n      }, error => {\r\n        this.errorText = error.error.message;\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if ((JSON.parse(localStorage.getItem('user')) as IUser)) {\r\n      const isFirstLogin = (JSON.parse(localStorage.getItem('user')) as IUser).isFirstLogin;\r\n      const nickName = (JSON.parse(localStorage.getItem('user')) as IUser).nickName;\r\n\r\n      if (isFirstLogin) {\r\n        this.redirectUrl = `/user/${nickName}`;\r\n      }\r\n    }\r\n\r\n    const loginSuccess = this.route.snapshot.data.loginSuccess;\r\n\r\n    if (loginSuccess) {\r\n      this.router.navigate([this.redirectUrl]);\r\n    }\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, Resolve} from '@angular/router';\r\nimport {Observable} from 'rxjs/index';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '../environments/environment';\r\nimport {map} from 'rxjs/internal/operators';\r\nimport {IPage} from './ipage';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PageDataResolverService implements Resolve<IPage> {\r\n  resolve(route: ActivatedRouteSnapshot): Observable<IPage> {\r\n    return this.httpClient.get<IPage>('interface', {params: {lang: ['en', 'ru', 'uk', 'fr'], id: route.data.resolverData}})\r\n      .pipe(map((pages: Array<IPage>) => route.data.resolverFn(pages)));\r\n  }\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-md-10\">\r\n    <label>Header</label>\r\n    <h1>{{model.header}}</h1>\r\n  </div>\r\n</div>\r\n<hr>\r\n<div class=\"form-group\" [ngModelGroup]=\"lang\">\r\n  <label for=\"pageTextData\">Page Data</label>\r\n  <textarea class=\"form-control\" id=\"pageTextData\" rows=\"10\" [(ngModel)]=\"model.pageData\" name=\"pageData\"></textarea>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {IPage} from '../ipage';\r\nimport { ControlContainer, NgForm } from '@angular/forms';\r\nimport {TLanguage} from '../types';\r\n\r\n@Component({\r\n  selector: 'app-page-editor',\r\n  templateUrl: './page-editor.component.html',\r\n  styleUrls: ['./page-editor.component.scss'],\r\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ]\r\n})\r\nexport class PageEditorComponent implements OnInit {\r\n  @Input() model: IPage;\r\n  @Input() lang: TLanguage;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {IUser} from './iuser';\r\nimport {ActivatedRouteSnapshot, Resolve} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResolveUserService implements Resolve<IUser> {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<IUser> {\r\n    return this.httpClient.get<IUser>('user', {\r\n      params: {\r\n        token: localStorage.getItem('AuthToken'), nickname: route.params.nickname\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"row\" [class.bg-success]=\"review.isPublished\">\n  <div class=\"col-2\">{{review.name}}</div>\n  <div class=\"col-2\">{{review.email}}</div>\n  <div class=\"col-2\">{{review.language}}</div>\n  <div class=\"col-4\">{{review.review}}</div>\n  <div class=\"col-2 text-right\">\n    <button class=\"btn btn-light\" (click)=\"setPublishFlag(review)\">\n      <i class=\"fas fa-check-square\" *ngIf=\"!review.isPublished\"></i>\n      <i class=\"fas fa-ban\" *ngIf=\"review.isPublished\"></i>\n    </button>\n    <button class=\"btn btn-light\" (click)=\"removeReview(review)\">\n      <i class=\"fas fa-trash-alt\"></i>\n    </button>\n  </div>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {IReview} from \"../reviews-resolver.service\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\n\n@Component({\n  selector: 'app-review',\n  templateUrl: './review.component.html',\n  styleUrls: ['./review.component.scss']\n})\nexport class ReviewComponent implements OnInit {\n  @Input() review: IReview;\n  @Output() deleteReview: EventEmitter<IReview> = new EventEmitter<IReview>();\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  ngOnInit() {\n  }\n\n  setPublishFlag(review: IReview) {\n    this.httpClient.put('review', {\n      id: review._id,\n      isPublished: !review.isPublished,\n      token: localStorage.getItem('AuthToken')\n    })\n      .subscribe((newReview: IReview) => {\n        review.isPublished = !review.isPublished;\n      })\n  }\n\n  removeReview(review: IReview) {\n    this.httpClient.delete('review', {params: {\n        id: review._id,\n        token: localStorage.getItem('AuthToken')\n      }\n    })\n      .subscribe(() => {\n        this.deleteReview.emit(review);\n      })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve} from \"@angular/router\";\nimport {map} from \"rxjs/internal/operators\";\nimport {IPage} from \"./ipage\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs/index\";\nimport {environment} from \"../environments/environment\";\nimport {TLanguage} from \"./types\";\n\nexport interface IReview {\n  name?: string;\n  review: string;\n  email?: string;\n  isPublished?: boolean;\n  language: TLanguage;\n  _id: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReviewsResolverService implements Resolve<Array<IReview>> {\n  resolve(route: ActivatedRouteSnapshot): Observable<Array<IReview>> {\n    return this.httpClient.get<Array<IReview>>('review', {\n      params: {token: localStorage.getItem('AuthToken')}\n    });\n  }\n\n  constructor(private httpClient: HttpClient) {\n  }\n}\n","<div class=\"container\">\r\n  <div class=\"row mt-2\">\r\n    <div class=\"col-2\">Name</div>\r\n    <div class=\"col-2\">E-mail</div>\r\n    <div class=\"col-2\">Language</div>\r\n    <div class=\"col-4\">Review text</div>\r\n    <div class=\"col-2 text-right\">Actions</div>\r\n  </div>\r\n  <hr>\r\n  <div class=\"row\">\r\n    <div class=\"col-12\" *ngFor=\"let review of reviews\">\r\n      <app-review [review]=\"review\" (deleteReview)=\"deleteReview($event)\"></app-review>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {IPageLanguageContainer} from '../ipage-language-container';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {IReview} from \"../reviews-resolver.service\";\r\n\r\n@Component({\r\n  selector: 'app-reviews',\r\n  templateUrl: './reviews.component.html',\r\n  styleUrls: ['./reviews.component.scss']\r\n})\r\nexport class ReviewsComponent implements OnInit {\r\n  public langObject: IPageLanguageContainer;\r\n  public reviews: Array<IReview>;\r\n\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  deleteReview(review: IReview) {\r\n    const index = this.reviews.findIndex((element: IReview): boolean => element._id === review._id);\r\n    this.reviews.splice(index, 1);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.langObject = this.route.snapshot.data.pageData;\r\n    this.reviews = this.route.snapshot.data.pageData;\r\n  }\r\n}\r\n","<p>\n  service works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-service',\n  templateUrl: './service.component.html',\n  styleUrls: ['./service.component.scss']\n})\nexport class ServiceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport {IPageLanguageContainer} from '../ipage-language-container';\r\nimport {ActivatedRoute} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-services',\r\n  templateUrl: './services.component.html',\r\n  styleUrls: ['./services.component.scss']\r\n})\r\nexport class ServicesComponent implements OnInit {\r\n  public langObject: IPageLanguageContainer;\r\n\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.langObject = this.route.snapshot.data.pageData;\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-10\">\r\n      <p>{{user?.firstName}} {{user?.lastName}}</p>\r\n      <h1>{{user?.nickName}}</h1>\r\n    </div>\r\n  </div>\r\n  <hr>\r\n  <div class=\"container\">\r\n      <div class=\"row\" *ngIf=\"isFirstLogIn\">\r\n        <div class=\"col-12\">\r\n          <div class=\"alert alert-warning\" role=\"alert\">\r\n            <h4 class=\"alert-heading\"><i class=\"fas fa-exclamation-triangle\"></i> Update your password!</h4>\r\n            <p>It seems that you have logged into your account for the first time. In order to use it, the password should be updated now.</p>\r\n            <hr>\r\n            <p class=\"mb-0\">Afterwards, you should log in again with the new password.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\" *ngIf=\"errorText\">\r\n        <div class=\"col-12\">\r\n          <div class=\"alert alert-danger\" role=\"alert\">\r\n            <h4 class=\"alert-heading\"><i class=\"fas fa-times-circle\"></i> Error!</h4>\r\n            <p>{{errorText}}</p>\r\n            <hr>\r\n            <p class=\"mb-0\">Please try again. If you changed a password, check fields carefully.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <form [formGroup]=\"formGroup\" (ngSubmit)=\"submit(form)\" #form=\"ngForm\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-2 col-xs-12 offset-md-10\">\r\n            <button type=\"submit\" class=\"btn btn-primary btn-block\">Submit</button>\r\n          </div>\r\n        </div>\r\n        <h3>User Details</h3>\r\n        <div class=\"row mt-3\">\r\n          <div class=\"col-md-6 col-xs-12\">\r\n            <div class=\"row\">\r\n              <div class=\"col-4\">\r\n                <label for=\"nickname\">Nickname:</label>\r\n              </div>\r\n              <div class=\"col-8\">\r\n                <input formControlName=\"nickName\" class=\"form-control\" id=\"nickname\"/>\r\n              </div>\r\n            </div>\r\n            <div class=\"row mt-3\">\r\n              <div class=\"col-4\">\r\n                <label for=\"firstname\">First Name:</label>\r\n              </div>\r\n              <div class=\"col-8\">\r\n                <input formControlName=\"firstName\" class=\"form-control\" id=\"firstname\"/>\r\n              </div>\r\n            </div>\r\n            <div class=\"row mt-3\">\r\n              <div class=\"col-4\">\r\n                <label for=\"lastname\">Last Name:</label>\r\n              </div>\r\n              <div class=\"col-8\">\r\n                <input formControlName=\"lastName\" class=\"form-control\" id=\"lastname\"/>\r\n              </div>\r\n            </div>\r\n            <div class=\"row mt-3\">\r\n              <div class=\"col-4\">\r\n                <label for=\"email\">Email:</label>\r\n              </div>\r\n              <div class=\"col-8\">\r\n                <input formControlName=\"email\" class=\"form-control\" id=\"email\"/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6 col-xs-12\">\r\n            <div class=\"row\">\r\n              <div class=\"col-4\">\r\n                <label for=\"current-password\">Current Password:</label>\r\n              </div>\r\n              <div class=\"col-8\">\r\n                <input formControlName=\"curPassword\" class=\"form-control\" id=\"current-password\" type=\"password\"/>\r\n              </div>\r\n            </div>\r\n            <div class=\"row mt-3\">\r\n              <div class=\"col-4\">\r\n                <label for=\"password\">New Password:</label>\r\n              </div>\r\n              <div class=\"col-8\">\r\n                <input formControlName=\"password\" class=\"form-control\" id=\"password\" type=\"password\"/>\r\n              </div>\r\n            </div>\r\n            <div class=\"row mt-3\">\r\n              <div class=\"col-4\">\r\n                <label for=\"password-repeat\">New Password Repeat:</label>\r\n              </div>\r\n              <div class=\"col-8\">\r\n                <input formControlName=\"repPassword\" class=\"form-control\" id=\"password-repeat\" type=\"password\"/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr>\r\n        <h3>Rights</h3>\r\n        <ng-container *ngFor=\"let right of getUserProperties()\">\r\n          <ng-container *ngIf=\"isRight(right)\">\r\n                <span class=\"badge mr-1\" [class.badge-primary]=\"right[1]\" [class.badge-light]=\"!right[1]\">\r\n                  {{getHumanReadableRight(right)}}: {{right[1]}}\r\n                </span>\r\n          </ng-container>\r\n        </ng-container>\r\n        <hr>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-2 col-xs-12 offset-md-10\">\r\n            <button type=\"submit\" class=\"btn btn-primary btn-block\">Submit</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {IUser} from '../iuser';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {FormBuilder, FormControl, FormGroup, NgForm} from '@angular/forms';\r\nimport {IContact} from '../icontact';\r\nimport {environment} from '../../environments/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss'],\r\n  providers: [FormBuilder]\r\n})\r\nexport class UserComponent implements OnInit {\r\n  public user: IUser;\r\n  public formGroup: FormGroup;\r\n  public isCurrentUser: boolean;\r\n  private isExisting: boolean;\r\n  private nickNameControl: FormControl;\r\n  private firstNameControl: FormControl;\r\n  private lastNameControl: FormControl;\r\n  private emailControl: FormControl;\r\n  private curPassword: FormControl;\r\n  private password: FormControl;\r\n  private repPassword: FormControl;\r\n  public isFirstLogIn: boolean;\r\n  public errorText: string;\r\n\r\n  constructor(private route: ActivatedRoute, private formBuilder: FormBuilder, private httpClient: HttpClient) {\r\n  }\r\n\r\n  private initControls() {\r\n    const nickname = this.user && this.user.nickName;\r\n    this.isExisting = Boolean(nickname);\r\n    this.nickNameControl = new FormControl({value: nickname, disabled: this.isExisting});\r\n    this.lastNameControl = new FormControl(this.user && this.user.lastName);\r\n    this.firstNameControl = new FormControl(this.user && this.user.firstName);\r\n    this.emailControl = new FormControl(this.user && this.user.email);\r\n    this.curPassword = new FormControl();\r\n    this.password = new FormControl();\r\n    this.repPassword = new FormControl();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    const currentUser: IUser = JSON.parse(localStorage.getItem('user'));\r\n    this.user = this.route.snapshot.data.userRequested;\r\n    this.isCurrentUser = currentUser.nickName === this.user.nickName;\r\n    this.initControls();\r\n    this.formGroup = this.formBuilder.group({\r\n      nickName: this.nickNameControl,\r\n      firstName: this.firstNameControl,\r\n      lastName: this.lastNameControl,\r\n      email: this.emailControl,\r\n      curPassword: this.curPassword,\r\n      password: this.password,\r\n      repPassword: this.repPassword\r\n    });\r\n    this.isFirstLogIn = (JSON.parse(localStorage.getItem('user')) as IUser).isFirstLogin;\r\n  }\r\n\r\n  public getUserProperties(): Array<any> {\r\n    return Object.entries(this.user);\r\n  }\r\n\r\n  public isRight(right: Array<any>): boolean {\r\n    return typeof right[1] === 'boolean';\r\n  }\r\n\r\n  public getHumanReadableRight(right: [string, boolean]): string {\r\n    let result: string = '';\r\n    let character: string = '';\r\n    let i = 0;\r\n    while (i < right[0].length) {\r\n      character = right[0].charAt(i);\r\n      if (character === character.toUpperCase()) {\r\n        result += ' ' + character.toLowerCase();\r\n      }\r\n      if (character === character.toLowerCase()) {\r\n        result += character;\r\n      }\r\n      i++;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  submit(e: NgForm) {\r\n    const formValue = e.value;\r\n\r\n    if (formValue.password !== formValue.repPassword) {\r\n      return alert('Password and password repeat should match.');\r\n    }\r\n\r\n    this.httpClient.put('user', {\r\n      ...formValue,\r\n      token: localStorage.getItem('AuthToken')\r\n    })\r\n      .subscribe((response: any): void => {\r\n        this.errorText = '';\r\n        if (formValue.password) {\r\n          localStorage.clear();\r\n        }\r\n        window.location.reload();\r\n      }, (error: any) => {\r\n        this.errorText = error.error.m;\r\n      });\r\n  }\r\n}\r\n","export const environment = {\n  production: false,\n  api: 'https://romanenkova.herokuapp.com/api/'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}